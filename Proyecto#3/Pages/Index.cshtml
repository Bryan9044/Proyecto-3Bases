@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<h2>Top 15 Tareas en Proceso o Iniciadas</h2>

<form method="post">
    <button type="submit" class="btn btn-primary">Mostrar Tareas</button>
</form>
<br />

<form method="post" id="formShowPagoPlanillas">
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modalFechaPagoPlanillas">
        Mostrar Pago de Planillas
    </button>
</form>
<br />
<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modalFechaPagoPlanillasDEP">
    Pago de planillas por departamento
</button>

<br />


<form method="post" id="formShowVerTipoMovimiento">
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modalTipoMovimiento">
        Cantidad de movimientos
    </button>
</form>
<br />
<form method="post" id="formShowVerProductos">
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modalTopProductos">
        Top productos
    </button>
</form>
<br />



<form method="post" id="formShowVerSectores">
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modalSectores">
        Ventas por sector
    </button>
</form>
<br />





<div class="modal fade" id="modalSectores" tabindex="-1" aria-labelledby="modalTopLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalTopLabel">Seleccionar Fecha y Formato</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post" asp-page-handler="ShowSectorVentas">
                    <div class="mb-3">
                        <label for="fechaPago4" class="form-label">Fecha a revisar</label>
                        <input type="date" class="form-control" id="fechaPago4" name="fechaPago4" />
                    </div>
                    <div class="mb-3" id="fechaPago4Container" style="display: none;">
                        <label for="fechaPago5" class="form-label">Segunda fecha a revisar</label>
                        <input type="date" class="form-control" id="fechaPago5" name="fechaPago5" />
                    </div>
                    <div class="mb-3">
                        <label for="formatoFecha4" class="form-label">Formato de Fecha</label>
                        <select class="form-select" id="formatoFecha4" name="formatoFecha4" required onchange="toggleFechaPago4()">
                            <option value="mes(año)">Mes(Año)</option>
                            <option value="RangoFecha">Rango fecha</option>
                        </select>
                    </div>
                    <button type="submit" class="btn btn-primary">Consultar</button>
                </form>
            </div>
        </div>
    </div>
</div>
<script>
    function toggleFechaPago4() {
        const formato = document.getElementById("formatoFecha4").value;
        const fechaPago4Container = document.getElementById("fechaPago4Container");

        if (formato === "RangoFecha") {
            fechaPago4Container.style.display = "block";
        } else {
            fechaPago4Container.style.display = "none";
        }
    }
</script>


<canvas id="pieChartSector" width="400" height="400"></canvas>

@if (Model.NombreSector != null && Model.MontoSector != null && Model.DescripcionSector.Count > 0)
{
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2.0.0"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var ctx = document.getElementById('pieChartSector').getContext('2d');

            var sectores = @Html.Raw(Json.Serialize(Model.NombreSector));
            var montos = @Html.Raw(Json.Serialize(Model.MontoSector));
            var descripciones = @Html.Raw(Json.Serialize(Model.DescripcionSector));

            var backgroundColors = sectores.map(() => `rgba(${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, 0.5)`);
            var borderColors = backgroundColors.map(color => color.replace('0.5', '1'));

            var data = {
                labels: sectores, 
                datasets: [{
                    data: montos, 
                    backgroundColor: backgroundColors,
                    borderColor: borderColors,
                    borderWidth: 1
                }]
            };

            var options = {
                responsive: true,
                plugins: {
                    datalabels: {
                        color: '#000',
                        formatter: function (value, context) {
                            return `${value}`; 
                        },
                        font: {
                            weight: 'bold',
                            size: 12 
                        },
                        anchor: 'center', 
                        align: 'center'   
                    },
                    legend: {
                        position: 'top',
                        labels: {
                            
                            generateLabels: function(chart) {
                                var labels = chart.data.labels;
                                var datasets = chart.data.datasets;
                                var legend = [];
                                datasets.forEach(function(dataset, i) {
                                    dataset.data.forEach(function(data, j) {
                                        legend.push({
                                            text: `${labels[j]} - ${descripciones[j]}`, 
                                            fillStyle: dataset.backgroundColor[j], 
                                            strokeStyle: dataset.borderColor[j] 
                                        });
                                    });
                                });
                                return legend;
                            }
                        }
                    }
                }
            };

            // Inicializar el gráfico
            new Chart(ctx, {
                type: 'pie', 
                data: data,
                options: options,
                plugins: [ChartDataLabels]
            });
        });
    </script>
}


<div class="modal fade" id="modalFechaPagoPlanillasDEP" tabindex="-1" aria-labelledby="modalFechaPagoPlanillasDEPLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalFechaPagoPlanillasDEPLabel">Seleccionar Fecha y Formato</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post" asp-page-handler="ShowPagoPlanillasDEPA">
                    <div class="mb-3">
                        <label for="fechaPago" class="form-label">Fecha a revisar</label>
                        <input type="date" class="form-control" id="fechaPago" name="fechaPago" />
                    </div>
                    <div class="mb-3" id="fechaPago2Container" style="display: none;">
                        <label for="fechaPago2" class="form-label">Segunda fecha a revisar</label>
                        <input type="date" class="form-control" id="fechaPago2" name="fechaPago2" />
                    </div>
                    <div class="mb-3">
                        <label for="formatoFecha2" class="form-label">Formato de Fecha</label>
                        <select class="form-select" id="formatoFecha2" name="formatoFecha2" required onchange="toggleFechaPago2()">
                            <option value="mes">Mes</option>
                            <option value="mes(año)">Mes(Año)</option>
                            <option value="RangoFecha">Rango fecha</option>
                        </select>
                    </div>
                    <button type="submit" class="btn btn-primary">Consultar</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    function toggleFechaPago2() {
        const formato = document.getElementById("formatoFecha2").value;
        const fechaPago2Container = document.getElementById("fechaPago2Container");

        if (formato === "RangoFecha") {
            fechaPago2Container.style.display = "block";
        } else {
            fechaPago2Container.style.display = "none";
        }
    }
</script>

<!-- Contenedor para el gráfico -->
<canvas id="pieChartDEP" width="400" height="400"></canvas>

@if (Model.Departamentos != null && Model.MontoPagadoPorMesDEP != null)
{
    <div>@Html.Raw(Json.Serialize(Model.Departamentos))</div>
    <div>@Html.Raw(Json.Serialize(Model.MontoPagadoPorMesDEP))</div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var ctx = document.getElementById('pieChartDEP').getContext('2d');

            // Verifica que los datos estén llegando
            var departamentos = @Html.Raw(Json.Serialize(Model.Departamentos ?? new List<string>()));
            var montos = @Html.Raw(Json.Serialize(Model.MontoPagadoPorMesDEP ?? new List<int>()));

            if (departamentos.length > 0 && montos.length > 0) {
                console.log("Datos recibidos correctamente para el gráfico");
                console.log("Departamentos:", departamentos);
                console.log("Montos:", montos);

                var data = {
                    labels: departamentos,
                    datasets: [{
                        data: montos,
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)',
                            'rgba(255, 159, 64, 0.2)',
                            'rgba(201, 203, 207, 0.2)',
                            'rgba(99, 255, 132, 0.2)',
                            'rgba(162, 235, 54, 0.2)'
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)',
                            'rgba(201, 203, 207, 1)',
                            'rgba(99, 255, 132, 1)',
                            'rgba(162, 235, 54, 1)'
                        ],
                        borderWidth: 1
                    }]
                };

                var options = {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'top'
                        }
                    }
                };

                new Chart(ctx, {
                    type: 'pie',
                    data: data,
                    options: options
                });
            } else {
                console.error("No hay datos para mostrar el gráfico");
            }
        });
    </script>
}
else
{
    <p>No hay datos disponibles para generar el gráfico.</p>
}



<!--Hay que corregir estas fechas porque en el grafico de barras sale mal-->
<div class="modal fade" id="modalFechaPagoPlanillas" tabindex="-1" aria-labelledby="modalFechaPagoPlanillasLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalFechaPagoPlanillasLabel">Seleccionar Fecha y Formato</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post" asp-page-handler="ShowPagoPlanillas">
                    <div class="mb-3">
                        <label for="fechaPago" class="form-label">Fecha a revisar </label>
                        <input type="date" class="form-control" id="fechaPago" name="fechaPago" required />
                    </div>
                    <div class="mb-3" id="fechaPago2Container" style="display: none;">
                        <label for="fechaPago2" class="form-label">Segunda fecha a revisar </label>
                        <input type="date" class="form-control" id="fechaPago2" name="fechaPago2" />
                    </div>
                    <div class="mb-3">
                        <label for="formatoFecha" class="form-label">Formato de Fecha</label>
                        <select class="form-select" id="formatoFecha" name="formatoFecha" required>
                            <option value="mes-año">Mes-Año</option>
                            <option value="año-mes">Año-Mes</option>
                            <option value="mes(año)">Mes(Año)</option>
                            <option value="RangoFecha">Rango fecha</option>
                        </select>
                    </div>
                    <button type="submit" class="btn btn-primary">Consultar</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    document.getElementById('formatoFecha').addEventListener('change', function () {
        var fechaPago2Container = document.getElementById('fechaPago2Container');
        if (this.value === 'RangoFecha') {
            fechaPago2Container.style.display = 'block';
        } else {
            fechaPago2Container.style.display = 'none';
        }
    });

    document.getElementById('formatoFecha').dispatchEvent(new Event('change'));
</script>

<canvas id="barChartPlanilla" width="400" height="200"></canvas>


@if (Model.MontoPagadoPorMes != null && Model.MontoPagadoPorMes.Count > 0 && Model.Meses != null && Model.Meses.Count > 0)
{
    <script>
        var ctx = document.getElementById('barChartPlanilla').getContext('2d');
        var data = {
            labels: @Html.Raw(Json.Serialize(Model.Meses)),
            datasets: [{
                label: 'Monto Pagado por Planilla',
                data: @Html.Raw(Json.Serialize(Model.MontoPagadoPorMes)),
                backgroundColor: 'rgba(54, 162, 235, 0.2)',
                borderColor: 'rgba(54, 162, 235, 1)',
                borderWidth: 1
            }]
        };
        var options = {
            responsive: true,
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        };
        new Chart(ctx, {
            type: 'bar',
            data: data,
            options: options
        });
    </script>
}



<div class="modal fade" id="modalTopProductos" tabindex="-1" aria-labelledby="modalTopLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalTopLabel">Seleccionar Fecha y Formato</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post" asp-page-handler="ShowTopFamilias">
                    <div class="mb-3">
                        <label for="fechaPago3" class="form-label">Fecha a revisar</label>
                        <input type="date" class="form-control" id="fechaPago3" name="fechaPago3" />
                    </div>
                    <div class="mb-3" id="fechaPago3Container" style="display: none;">
                        <label for="fechaPago2" class="form-label">Segunda fecha a revisar</label>
                        <input type="date" class="form-control" id="fechaPago4" name="fechaPago4" />
                    </div>
                    <div class="mb-3">
                        <label for="formatoFecha3" class="form-label">Formato de Fecha</label>
                        <select class="form-select" id="formatoFecha3" name="formatoFecha3" required onchange="toggleFechaPago3()">
                            <option value="mes(año)">Mes(Año)</option>
                            <option value="RangoFecha">Rango fecha</option>
                        </select>
                    </div>
                    <button type="submit" class="btn btn-primary">Consultar</button>
                </form>
            </div>
        </div>
    </div>
</div>
<script>
    function toggleFechaPago3() {
        const formato = document.getElementById("formatoFecha3").value;
        const fechaPago3Container = document.getElementById("fechaPago3Container");

        if (formato === "RangoFecha") {
            fechaPago3Container.style.display = "block";
        } else {
            fechaPago3Container.style.display = "none";
        }
    }
</script>



<br />
<canvas id="pieChartFAM" width="400" height="400"></canvas>

@if (Model.NombreFamilia != null && Model.MontoFamilia != null)
{
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2.0.0"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var ctx = document.getElementById('pieChartFAM').getContext('2d');

            var bodegas = @Html.Raw(Json.Serialize(Model.NombreFamilia));
            var cantidades = @Html.Raw(Json.Serialize(Model.MontoFamilia));

            var backgroundColors = bodegas.map(() => `rgba(${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, 0.5)`);
            var borderColors = backgroundColors.map(color => color.replace('0.5', '1'));

            var data = {
                labels: bodegas,
                datasets: [{
                    data: cantidades,
                    backgroundColor: backgroundColors,
                    borderColor: borderColors,
                    borderWidth: 1
                }]
            };

            var options = {
                responsive: true,
                plugins: {
                    datalabels: {
                        color: '#000',
                        formatter: function (value, context) {
                            return `${value}`;
                        },
                        font: {
                            weight: 'bold'
                        }
                    },
                    legend: {
                        position: 'top'
                    }
                }
            };

            new Chart(ctx, {
                type: 'pie',
                data: data,
                options: options,
                plugins: [ChartDataLabels]
            });
        });
    </script>
}









<div class="modal fade" id="modalTipoMovimiento" tabindex="-1" aria-labelledby="modalTipoMovimientoLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalTipoMovimientoLabel">Seleccionar Tipo de Movimiento</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post" asp-page-handler="ShowVerTipoMovimiento">
                    <div class="mb-3">
                        <label for="tipoMovimiento" class="form-label">Tipo de movimiento</label>
                        <select class="form-control" id="tipoMovimiento" name="tipoMovimiento" required>
                            <option value="Entrada">Entrada</option>
                            <option value="Salida">Salida</option>
                        </select>
                    </div>
                    <button type="submit" class="btn btn-primary">Consultar</button>
                </form>
            </div>
        </div>
    </div>
</div>




